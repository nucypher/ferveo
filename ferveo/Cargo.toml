[package]
name = "ferveo-nucypher-temp4"
version = "0.4.0-alpha"
edition = "2021"
license = "GPL-3.0"
repository = "https://github.com/nucypher/ferveo"
readme = "README.md"
description = "An implementation of a DKG protocol for threshold decryption."
keywords = ["DKG"]
categories = ["cryptography"]
authors = ["David Nu√±ez <david@nucypher.com>", "Piotr Roslaniec <p.roslaniec@gmail.com>", "Heliax AG <hello@heliax.dev>"]

[lib]
bench = false

[dependencies]
ark-bls12-381 = { workspace = true }
ark-ec = { workspace = true }
ark-ff = { workspace = true }
ark-poly = { workspace = true }
ark-serialize = { workspace = true }
ark-std = { workspace = true }
bincode = { workspace = true }
ferveo-common = { package = "ferveo-common-nucypher-temp4", path = "../ferveo-common", version = "^0.4.0-alpha" }
ferveo-tdec = { package = "ferveo-tdec-temp4", path = "../ferveo-tdec", features = ["api", "test-common"], version = "^0.4.0-alpha" }
hex = { workspace = true }
itertools = { workspace = true }
measure_time = { workspace = true }
rand = { workspace = true }
rand_core = { workspace = true }
rand_old = { workspace = true }
serde = { workspace = true, features = ["derive"] }
serde_with = { workspace = true }
subproductdomain = { package = "subproductdomain-nucypher-temp4", path = "../subproductdomain", version = "^0.4.0-alpha" }
thiserror = { workspace = true }
zeroize = { workspace = true, features = ["derive"] }
generic-array = { workspace = true }
derive_more = { workspace = true, features = ["from", "as_ref", "into"] }
pyo3 = { workspace = true, features = ["macros", "multiple-pymethods"], optional = true }
console_error_panic_hook = { workspace = true, optional = true }
getrandom = { workspace = true, features = ["js"], optional = true }
js-sys = { workspace = true, optional = true }
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-derive = { workspace = true, optional = true }

[dev-dependencies]
criterion = { workspace = true }
digest = { workspace = true, features = ["alloc"] }
pprof = { workspace = true, features = ["flamegraph", "criterion"] }
test-case = { workspace = true }
console_error_panic_hook = { workspace = true }
serde = { workspace = true, features = ["derive"] }
wasm-bindgen = { workspace = true, features = ["serde-serialize"] }
cargo-smart-release = { workspace = true }

[features]
bindings-python = ["pyo3"]
bindings-wasm = ["console_error_panic_hook", "getrandom", "js-sys", "wasm-bindgen", "wasm-bindgen-derive"]

[[example]]
name = "bench_primitives_size"
path = "examples/bench_primitives_size.rs"

#[[bench]]
#name = "pvdkg"
#path = "benches/benchmarks/pvdkg.rs"
#harness = false

[[bench]]
name = "benchmarks"
path = "benches/bench_main.rs"
harness = false

[package.metadata.cargo-machete]
ignored = [
    "getrandom",
    "rand_old" # used by benchmarks/pairing.rs
]

